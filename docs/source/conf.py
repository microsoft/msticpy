# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# type: ignore

# pylint: disable=invalid-name, missing-module-docstring, import-error

# noqa D100

# flake8: noqa

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
import os
import re
import sys

sys.path.insert(0, os.path.abspath(".."))

# -- Project information -----------------------------------------------------

project = "msticpy"
# pylint: disable=redefined-builtin
copyright = "2019, (c) Microsoft Corporation."
author = "Ian Hellen"


with open("../../msticpy/_version.py", "r", encoding="utf-8") as fd:
    v_match = re.search(r'^VERSION\s*=\s*[\'"]([^\'"]*)[\'"]', fd.read(), re.MULTILINE)
    _ver = v_match.group(1) if v_match else "no version"

# The full version, including alpha/beta/rc tags
release = _ver
# The short X.Y version
version = _ver

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.coverage",
    "sphinx.ext.githubpages",
    "sphinx.ext.napoleon",
    "sphinx.ext.autosectionlabel",
]

autosectionlabel_prefix_document = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = [
    "data_acquisition/_static",
    "data_analysis/_static",
    "getting_started/_static",
    "visualization/_static",
]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "msticpydoc"


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, "msticpy.tex", "msticpy Documentation", "Ian Hellen", "manual")
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "msticpy", "msticpy Documentation", [author], 1)]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "msticpy",
        "msticpy Documentation",
        author,
        "msticpy",
        "Security tools for Python and Jupyter notebooks.",
        "Security",
    )
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
# epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ["search.html"]


# -- Extension configuration -------------------------------------------------
autodoc_default_options = {
    "members": None,
    "inherited-members": None,
    "ignore-module-all": None,
}

autoclass_content = "both"

autoapi_dirs = ["../../msticpy"]

autodoc_mock_imports = [
    "adal",
    "azure.common.exceptions",
    "azure.core.exceptions",
    "azure.core.pipeline",
    "azure.core.pipeline.policies",
    "azure.core.pipeline.transport",
    "azure.identity",
    "azure.keyvault",
    "azure.keyvault.secrets",
    "azure.mgmt.compute",
    "azure.mgmt.compute.models",
    "azure.mgmt.keyvault",
    "azure.mgmt.keyvault.models",
    "azure.mgmt.monitor",
    "azure.mgmt.network",
    "azure.mgmt.resource",
    "azure.mgmt.resourcegraph",
    "azure.mgmt.subscription",
    "azure.storage",
    "azure.storage.blob",
    "IPython",
    "keyring",
    "Kqlmagic",
    "matplotlib",
    "matplotlib.pyplot",
    "moz_sql_parser",
    "msrest.authentication",
    "msrestazure",
    "statsmodels",
    "scipy",
    "sklearn",
    "splunk-sdk",
    "splunklib",
    "seaborn",
    "vt",
    "vt_graph_api",
]
