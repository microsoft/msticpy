metadata:
  version: 1
  description: Kql Sentinel Azure
  data_environments: [LogAnalytics]
  data_families: [Azure]
  tags: ["signin", "logon", "azure", "aad", "activedirectory"]
defaults:
  metadata:
    data_source: "Azure"
  parameters:
    start:
      description: Query start time
      type: datetime
    end:
      description: Query end time
      type: datetime
    add_query_items:
      description: Additional query clauses
      type: str
      default: ""
sources:
  list_aad_signins_for_account:
    description: Returns Azure AD Signins for Account
    metadata:
      pivot:
        short_name: signins
        direct_func_entities:
          - Account
    args:
      query: '
        let accountName = "{account_name}";
        let account = case(
        accountName has "@", tostring(split(accountName, "@")[0]),
        accountName has "\\", tostring(split(accountName, "\\")[1]),
        accountName
        );
        {table}
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | where (
        (account == "!!DEFAULT!!" or UserPrincipalName has account)
        and
        ("{account_id}" == "!!DEFAULT!!" or UserId =~ "{account_id}")
        )
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: SigninLogs
      account_name:
        description: The account name to find
        type: str
        default: "!!DEFAULT!!"
      account_id:
        description: Azure user ID to find
        type: str
        default: "!!DEFAULT!!"
  list_aad_signins_for_ip:
    description: Returns Azure AD Signins for an IP Address
    metadata:
      pivot:
        short_name: signins
        direct_func_entities:
          - IpAddress
    args:
      query: "
        {table}
        | where IPAddress in ({ip_address_list})
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}"
    parameters:
      table:
        description: Table name
        type: str
        default: SigninLogs
      ip_address_list:
        description: The IP Address or list of Addresses
        type: list
  list_azure_activity_for_account:
    description: Returns Azure Activity for Account
    metadata:
      pivot:
        short_name: activity
        direct_func_entities:
          - Account
    args:
      query: '
        let accountName = "{account_name}";
        let account = case(
        accountName has "@", tostring(split(accountName, "@")[0]),
        accountName has "\\", tostring(split(accountName, "\\")[1]),
        accountName
        );
        {table}
        | where Caller has account
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: AzureActivity
      account_name:
        description: The account name to find
        type: str
  list_azure_activity_for_ip:
    description: Returns Azure Activity for Caller IP Address(es)
    metadata:
      pivot:
        short_name: activity
        direct_func_entities:
          - IpAddress
    args:
      query: "
        {table}
        | where CallerIpAddress in ({ip_address_list})
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}"
    parameters:
      table:
        description: Table name
        type: str
        default: AzureActivity
      ip_address_list:
        description: The IP Address or list of Addresses
        type: list
  list_azure_activity_for_resource:
    description: Returns Azure Activity for an Azure Resource ID
    metadata:
      pivot:
        short_name: activity
        direct_func_entities:
          - AzureResource
    args:
      query: '
        {table}
        | where ResourceId has "{resource_id}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: AzureActivity
      resource_id:
        description: ResourceId or substring
        type: str
        aliases:
          - resource
  list_all_signins_geo:
    description: Gets Signin data used by morph charts
    metadata:
    args:
      query: '
        {table}
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | extend Result = iif(ResultType==0, "Sucess", "Failed")
        | extend Latitude = tostring(parse_json(tostring(LocationDetails.geoCoordinates)).latitude)
        | extend Longitude = tostring(parse_json(tostring(LocationDetails.geoCoordinates)).longitude)
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: SigninLogs
  list_storage_ops_for_ip:
    description: Returns Storage Operations for an IP Address
    metadata:
      pivot:
        short_name: storage_ops
    args:
      query: '
        union
        StorageFileLogs,
        StorageBlobLogs
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | where OperationName =~ "PutBlob" or OperationName =~ "PutRange"
        | extend ClientIP = tostring(split(CallerIpAddress, ":", 0)[0])
        | where ClientIP == {ip_address}
        | extend FileName = extract(@"\/([\w\-. ]+)\?", 1, Uri)
        | extend base64Char = base64_decode_toarray(ResponseMd5)
        | mv-expand base64Char
        | extend hexChar = tohex(toint(base64Char))
        | extend hexChar = iff(strlen(hexChar) < 2, strcat("0", hexChar), hexChar)
        | extend SourceTable = iff(OperationName has "range", "StorageFileLogs", "StorageBlobLogs")
        | summarize make_list(hexChar) by CorrelationId, ResponseMd5, FileName, AccountName, TimeGenerated, RequestBodySize, ClientIP, SourceTable
        | extend Md5Hash = strcat_array(list_hexChar, "")
        | project TimeGenerated, FileName, ClientIP, SourceTable, Md5Hash, AccountName, RequestBodySize
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: StorageFileLogs
      ip_address:
        description: Client IP Address
        type: str
  list_storage_ops_for_hash:
    description: Returns Azure Storage Operations for an MD5 file hash
    args:
      query: '
        union
        StorageFileLogs,
        StorageBlobLogs
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | where OperationName =~ "PutBlob" or OperationName =~ "PutRange"
        | extend ClientIP = tostring(split(CallerIpAddress, ":", 0)[0])
        | extend FileName = extract(@"\/([\w\-. ]+)\?", 1, Uri)
        | extend base64Char = base64_decode_toarray(ResponseMd5)
        | mv-expand base64Char
        | extend hexChar = tohex(toint(base64Char))
        | extend hexChar = iff(strlen(hexChar) < 2, strcat("0", hexChar), hexChar)
        | extend SourceTable = iff(OperationName has "range", "StorageFileLogs", "StorageBlobLogs")
        | summarize make_list(hexChar) by CorrelationId, ResponseMd5, FileName, AccountName, TimeGenerated, RequestBodySize, ClientIP, SourceTable
        | extend Md5Hash = strcat_array(list_hexChar, "")
        | where Md5Hash =~ {file_hash}
        | project TimeGenerated, FileName, ClientIP, SourceTable, Md5Hash, AccountName, RequestBodySize
        {add_query_items}'
    parameters:
      table:
        description: Table name
        type: str
        default: StorageFileLogs
      file_hash:
        description: MD5 hash of file
        type: str
  get_vmcomputer_for_ip:
    description: Returns most recent VMComputer record for IPAddress
    metadata:
      pivot:
        short_name: vmcomputer
    args:
      query: '
        {table}
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | where Ipv4Addresses has "{ip_address}"
        | order by TimeGenerated desc
        | take 1'
    parameters:
      table:
        description: Table name
        type: str
        default: VMComputer
      ip_address:
        description: The IP Address of the VM
        type: str
  get_vmcomputer_for_host:
    description: Returns most recent VMComputer record for Host
    metadata:
      pivot:
        short_name: vmcomputer
    args:
      query: '
        {table}
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | where Computer has "{host_name}"
        | take 1'
    parameters:
      table:
        description: Table name
        type: str
        default: VMComputer
      host_name:
        description: The Computer name of the VM
        type: str
