metadata:
  version: 1
  description: Kql Sentinel Windows Logon Event Queries
  data_environments: [LogAnalytics]
  data_families: [WindowsSecurity]
  tags: ['process', 'windows', 'processtree', 'session']
defaults:
  metadata:
    data_source: 'security_event'
  parameters:
      table:
        description: Table name
        type: str
        default: 'SecurityEvent'
      event_filter:
        description: Event subset
        type: str
        default: '| where EventID == 4624'
      query_project:
        description: Column project statement
        type: str
        default: '
          | project
            TenantId,
            Account,
            EventID,
            TimeGenerated,
            SourceComputerId,
            Computer,
            SubjectUserName,
            SubjectDomainName,
            SubjectUserSid,
            TargetUserName,
            TargetDomainName,
            TargetUserSid,
            TargetLogonId,
            LogonProcessName,
            LogonType,
            LogonTypeName,
            AuthenticationPackageName,
            Status,
            IpAddress,
            WorkstationName
          | extend TimeCreatedUtc=TimeGenerated'
      start:
        description: Query start time
        type: datetime
      end:
        description: Query end time
        type: datetime
      add_query_items:
        description: Additional query clauses
        type: str
        default: ''
      subscription_filter:
        description: Optional subscription/tenant filter expression
        type: str
        default: 'true'
sources:
  get_host_logon:
    description: Retrieves the logon event for the session id on the host
    metadata:
      pivot:
        short_name: logon_session
    args:
      query: '
        {table}
        {event_filter}
        {query_project}
        | where {subscription_filter}
        | where Computer has "{host_name}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | where TargetLogonId == "{logon_session_id}"
        {add_query_items}'
    parameters:
      host_name:
        description: Name of host
        type: str
      logon_session_id:
        description: The logon session ID of the source process
        type: str
  list_host_logons:
    description: Retrieves the logon events on the host
    metadata:
      pivot:
        short_name: logons
        direct_func_entities:
          - Host
    args:
      query: '
        {table}
        {event_filter}
        {query_project}
        | where {subscription_filter}
        | where Computer has "{host_name}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      host_name:
        description: Name of host
        type: str
  list_host_logon_failures:
    description: Retrieves the logon failure events on the host
    metadata:
      pivot:
        short_name: logon_failures
        direct_func_entities:
          - Host
    args:
      query: '
        {table}
        {event_filter}
        {query_project}
        | where {subscription_filter}
        | where Computer has "{host_name}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      host_name:
        description: Name of host
        type: str
      event_filter:
        description: Table name
        type: str
        default: '| where EventID == 4625'
  list_logons_by_account:
    description: Retrieves the logon events for an account
    metadata:
      pivot:
        short_name: logons
        direct_func_entities:
          - Account
    args:
      query: '
        {table}
        {event_filter}
        {query_project}
        | where {subscription_filter}
        | where Account has "{account_name}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      account_name:
        description: The account name to find
        type: str
  list_logon_attempts_by_account:
    description: Retrieves the logon events for an account
    metadata:
      pivot:
        short_name: logon_attempts
        direct_func_entities:
          - Account
    args:
      query: '
        {table}
        {event_filter}
        {query_project}
        | where {subscription_filter}
        | where Account has "{account_name}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      account_name:
        description: The account name to find
        type: str
      event_filter:
        description: Event ID filter
        type: str
        default: '| where EventID in (4624, 4625)'
  list_logon_failures_by_account:
    description: Retrieves the logon failure events  for an account
    metadata:
      pivot:
        short_name: logon_failures
        direct_func_entities:
          - Account
    args:
      query: '
        {table}
        {event_filter}
        {query_project}
        | where {subscription_filter}
        | where Account has "{account_name}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        {add_query_items}'
    parameters:
      account_name:
        description: The account name to find
        type: str
      event_filter:
        description: Event ID filter
        type: str
        default: '| where EventID == 4625'
  list_all_logons_by_host:
    description: account all failed or successful logons to a host
    metadata:
      pivot:
        short_name: logon_attempts
        direct_func_entities:
          - Host
    args:
      query: '
        {table}
        {event_filter}
        {query_project}
        | where {subscription_filter}
        | where Computer has "{host_name}"
        | where TimeGenerated >= datetime({start})
        | where TimeGenerated <= datetime({end})
        | extend LogonResult = iif(EventID==4624, "Success", "Failure")
        | extend SourceIP = IpAddress
        {add_query_items}'
    parameters:
      host_name:
        description: Name of host
        type: str
      event_filter:
        description: Event ID filter
        type: str
        default: '| where EventID in (4624, 4625)'
